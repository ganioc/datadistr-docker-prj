plugins {
    id 'java'
    id 'application'
}
application{
    mainClassName="org.exam.Tracker"
}
group 'org.exam'
version '1.0-SNAPSHOT'

java{
    toolchain{
        languageVersion.set(JavaLanguageVersion.of(8))
    }
}

repositories {
    // ipfs repository
    maven { url 'https://jitpack.io' }
    // JavaSDK snapshot 版本 maven库
    maven { url "https://oss.sonatype.org/content/repositories/snapshots"}
    // JavaSDK maven 库
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/"}

    mavenCentral()
}
def spring_version = "4.3.27.RELEASE"
List spring = [
        "org.springframework:spring-core:$spring_version",
        "org.springframework:spring-beans:$spring_version",
        "org.springframework:spring-context:$spring_version",
        "org.springframework:spring-tx:$spring_version",
]
dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    compile('com.thetransactioncompany:jsonrpc2-client:1.14.4')

    compile ('org.fisco-bcos.java-sdk:fisco-bcos-java-sdk:2.7.1')
    compile spring
    compile ('org.slf4j:slf4j-log4j12:1.7.25')
    compile ('com.github.pcj:google-options:1.0.0')

    // compile ('com.github.celeduc:java-ipfs-api:v1.0.0-PRE')
    compile ('com.github.ipfs:java-ipfs-http-client:v1.3.3')

//    runtime files('src/main/resources')
}

test {
    useJUnitPlatform()
}

jar {
    destinationDir file('build/apps/')
    manifest {
        attributes(
                'Main-Class': 'org.exam.Tracker'
        )
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    exclude 'META-INF/*.RSA'
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'

    doLast {
        copy {
            from file('src/main/resources/')
            into 'build/apps'
        }
    }
}


processResources{

}